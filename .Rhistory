mean(econo$race == 0 & econo$education.num == 1 & econo$income == 1 )
mean(econo$race == 1 & econo$income == 1 )
mean(econo$race == 1 & econo$education.num == 1 & econo$income == 1 )
mean(econo$race == 1 & econo$education.num == 1 & econo$income == 1 & econo$sex == 1 )
mean(econo$race == 1 & econo$education.num == 1 & econo$income == 1 & econo$sex == 0 )
GLM.7 <- glm(income ~ race + education.num +sex, family=binomial(logit),
data=econo)
summary(GLM.7)
cos(0.7973465)-cos(0.80877582)
cos(0.008223185)
acos(0.008223185)
acos(0.7973465)-acos(0.80877582)
acos(0.01918194)
cos(0.01918194)
acos(0.7973465)-acos(0.80877582)
acos(0.7973465)-acos(0.80877582)
57.29578*(79.73465/100)
acos(0.7973465)
acos(0.6357614)
acos(0.6357614)-acos(0.3447208)
acos(0.6357614)-acos(0.3447208)
cos(-0.3370532)
4.1+2.3+2.2+0.7+0.5
5/9.8
9.8/5
1-(796.91/2599.53)
2599.53/(2599.53+796.91)
0.7973465*0.8987582+0.3250912*0.2667132
sqrt(0.7973465^2+0.3250912^2)
sqrt(0.8987582^2+0.2667132^2)
0.8033278/(0.8610724*0.9374979)
0.7973465*0.8087582+0.3250912*0.2667132
0.7315666/(0.8610724*0.9374979)
sqrt(0.8087582^2+0.2667132^2)
0.8516019*0.8610724
0.8033278/0.7332909
acos(1.09551)
acos(1.09551)
0.7973465*0.8087582+0.3250912*0.2667132
0.7315666/0.7332909
acos(0.9976485)
0.06859187*57.29578
e^(-1.7531)/(1+e^(-1.7531))
exp(-1.7531)/(1+exp(-1.7531))
exp(-1.7532)/(1+exp(-1.7532))
exp(-1.7165)/(1+exp(-1.7165))
GLM.5 <- glm(income ~ race, family=binomial(logit), data=econo)
summary(GLM.5)
logit_GLM.5.1 = plogis(-1.02673-0.64500)
logit_GLM.5.2 = plogis(-1.02673)
logit_GLM.5 = logit_GLM.5.1 - logit_GLM.5.2
logit_GLM.5
GLM.6 <- glm(income ~ race + education.num, family=binomial(logit),
data=econo)
summary(GLM.6)
logit_GLM.6.1 = plogis(coef(GLM.6)[1]+coef(GLM.6)[2]*1+coef(GLM.6)[3]*1)
logit_GLM.6.2 = plogis(coef(GLM.6)[1]+coef(GLM.6)[2]*0+coef(GLM.6)[3]*1)
logit_GLM.6 = logit_GLM.6.1 - logit_GLM.6.2
logit_GLM.6
GLM.8 <- glm(income ~ race + education.num + (race*education.num),
family=binomial(logit), data=econo)
summary(GLM.8)
logit_GLM.8.1 = plogis(coef(GLM.8)[1]+coef(GLM.8)[2]*1+coef(GLM.8)[3]*1+(coef(GLM.8)[2]*1)*(coef(GLM.8)[3]*1))
logit_GLM.8.2 = plogis(coef(GLM.8)[1]+coef(GLM.8)[2]*0+coef(GLM.8)[3]*1+coef(GLM.8)[3]*1)
logit_GLM.8 = logit_GLM.8.1 - logit_GLM.8.2
logit_GLM.8
help("shapiro.test")
shapiro.test(x=GLM.5)
help("Random")
help("runif")
X = runif(n=5000)
help("rand")
X = ceiling(runif(n=5000))
X
View(econo)
X = ceiling(runif(n=5000,min = 2,max=30162))
X
shapiro.test (X)
res=GLM.5[X]
shapiro.test (res)
res=GLM.5$residuals[X]
shapiro.test (res)
library(Rcmdr)
modele1 = lm(income~race,data = econo)
summary(modele1)
modele1 = lm(income~race,data = econo)
summary(modele1)
modele1 = lm(formula=income~race,data = econo)
summary(modele1)
econo$race=as.character(econo$race)
econo$race[econo$race == "White"]= 0
econo$race[econo$race == "Black"]=1
econo$race[econo$race == "Other"]=1
econo$race[econo$race == "Amer-Indian-Eskimo"]=1
econo$race[econo$race == "Asian-Pac-Islander"]=1
typeof(econo$race)
econo$race=as.factor(econo$race)
class(econo$race)
econo$income=as.character(econo$income)
econo$income[econo$income == "<=50K" ] = 0
econo$income[econo$incom == ">50K" ] = 1
typeof(econo$income)
econo$income=as.factor(econo$income)
class(econo$race)
econo$education.num[econo$education.num < 14 ]=0
econo$education.num[econo$education.num >= 14]=1
typeof(econo$education.num)
econo$education.num=as.factor(econo$education.num)
class(econo$education.num)
econo$sex=as.character(econo$sex)
econo$sex[econo$sex == "Female"]=1
econo$sex[econo$sex == "Male"]=0
typeof(econo$sex)
econo$sex=as.factor(econo$sex)
class(econo$sex)
modele1 = lm (formula=income~race,data = econo)
summary(modele1)
typeof(econo$sex)
typeof(econo$race)
typeof(econo$race)
econo$race=as.integer(econo$race)
class(econo$race)
typeof(econo$income)
econo$income=as.factor(econo$income)
class(econo$race)
modele1 = lm (formula=income~race,data = econo)
summary(modele1)
typeof(econo$income)
econo$income=as.integer(econo$income)
class(econo$race)
modele1 = lm (formula=income~race,data = econo)
summary(modele1)
res=modele1$residuals[X]
Y = ceiling(runif(n=5000,min = 2,max=30162))
res=modele1$residuals[X]
shapiro.test (res)
Y
Y
shapiro.test(res)
modele1 = lm (formula=income~race,data = econo)
summary(modele1)
Y = ceiling(runif(n=5000,min = 2,max=30162))
res=modele1$residuals[X]
shapiro.test(res)
Y
X = ceiling(runif(n=5000,min = 2,max=30162))
res=GLM.5$residuals[X]
shapiro.test (res)
X
X
X
X = ceiling(runif(n=5000,min = 2,max=30162))
res=GLM.5$residuals[X]
shapiro.test (res)
Y = ceiling(runif(n=5000,min = 2,max=30162))
re=modele1$residuals[X]
shapiro.test(re)
setwd("C:/Users/Loic/Documents/coursecono")
library(Rcmdr)
econo = read.table("/Users/martelee/Downloads/data4", header = T,sep=" ")
summary(econo)
econo$race=as.character(econo$race)
econo$race[econo$race == "White"]=0
econo$race[econo$race == "Black"]=1
econo$race[econo$race == "Other"]=1
econo$race[econo$race == "Amer-Indian-Eskimo"]=1
econo$race[econo$race == "Asian-Pac-Islander"]=1
typeof(econo$race)
econo$race=as.factor(econo$race)
class(econo$race)
levels(econo$race)
econo$income=as.character(econo$income)
econo$income[econo$income == "<=50K" ] = 0
econo$income[econo$income == ">50K" ] = 1
typeof(econo$income)
econo$income=as.factor(econo$income)
class(econo$income)
econo$education.num[econo$education.num < 14 ]=0
econo$education.num[econo$education.num >= 14]=1
typeof(econo$education.num)
econo$education.num=as.factor(econo$education.num)
class(econo$education.num)
econo$sex=as.character(econo$sex)
econo$sex[econo$sex == "Female"]=1
econo$sex[econo$sex == "Male"]=0
typeof(econo$sex)
econo$sex=as.factor(econo$sex)
class(econo$sex)
summary(econo)
RLM <- lm(education.num ~ race + sex + race*sex, data=econo)
summary(RLM)
levels(econo$race)
levels(econo$race)
class(econo$race)
RLM <- lm(education.num ~ race + sex + race*sex, data=econo)
summary(RLM)
typeof(econo$education.num)
econo$education.num=as.numeric(econo$education.num)
class(econo$education.num)
typeof(econo$race)
econo$race=as.numeric(econo$race)
class(econo$race)
typeof(econo$sex)
econo$sex=as.numeric(econo$sex)
class(econo$numeric)
typeof(econo$sex)
econo$sex=as.numeric(econo$sex)
class(econo$sex)
RLM <- lm(education.num ~ race + sex + race*sex, data=econo)
summary(RLM)
summary(econo)
econo$education.num=econo$education.num-1
econo$race=econo$race-1
econo$sex=econo$sex-1
summary(econo)
RLM <- lm(education.num ~ race + sex + race*sex, data=econo)
summary(RLM)
RLM <- lm(education.num ~ race + sex + race*sex, data=econo)
sum = summary(RLM)
sum
RLM2<- lm(education.num ~sex + race*sex, data=econo)
sum2=summary(RLM2)
sum2
rs = race*sex
rs = econo$race*econo$sex
RLM2<- lm(education.num ~sex + rs, data=econo)
sum2=summary(RLM2)
sum2
plot(fitted.values(RLM2),residuals(RLM2))
t.test(RLM2)
a = t.test(RLM2)
aov(RLM2)
mylogit2=glm(formula= econo$education.num~econo$race +econo$sex + econo$race*econo$sex, family=binomial(link="logit"), maxit=200)
eff_2 <-plogis(coef(mylogit2)[1]+coef(mylogit2)[2]+coef(mylogit2)[3]+coef(mylogit2)[4])- plogis(coef(mylogit2)[1]+coef(mylogit2)[2]+coef(mylogit2)[3])
eff_2
mylogit2=glm(formula= econo$education.num~econo$race +econo$sex + econo$race*econo$sex, family=binomial(link="logit"), maxit=200)
mylogit2
RLM21 <- lm(education.num ~ race + sex, data=econo)
summary(RLM21)
plot(fitted.values(RLM21),residuals(RLM21))
RLM21 <- lm(education.num ~ race, data=econo)
summary(RLM22)
RLM22 <- lm(education.num ~ race, data=econo)
summary(RLM22)
plot(fitted.values(RLM22),residuals(RLM22))
RLM21 <- lm(education.num ~ race + sex, data=econo)
summary(RLM21)
# tout est significatif pour 5%.
plot(fitted.values(RLM21),residuals(RLM21))
# 1ere question
0.414912^2
1.101233^2
setwd("C:/Users/Loic/Documents/coursecono")
sqrt(1/2)-cos(1/2)
sqrt(0.5)-cos(0.5)
sqrt(0.75)-cos(0.75)
((1/2)+(3/4))/2
sqrt(0.625)-cos(0.625)
(1+sqrt(5))/2
(1-sqrt(5))/2
sqrt(8)-2
sqrt(64)-2
sqrt(8)
sqrt(8)-3
View(BD1)
View(BD1)
setwd("C:/Users/Loic/Documents/coursecono")
0.414912^2
1.101233^2
ls()
rm()
ls()
rm(ls())
rm(list=ls())
ls()
A<-2
B<-7
ls()
rm(A)
ls()
c(-2,-1,0,1,2,3)
x-<c(-2,-1,0,1,2,3)
x<-c(-2,-1,0,1,2,3)
y<-seq(-2,3,by=1)
z<-seq(-10,10,by=3)
x+2
y<-c(5,length=5)
y<-c(5,5)
ls()
rm(ls())
rm()
rm(list=ls())
ls()
x <= c(-2,-1,0,1,2,3)
x < c(-2,-1,0,1,2,3)
x => c(-2,-1,0,1,2,3)
x = c(-2,-1,0,1,2,3)
y = seq(-2,3,by=1)
y= rep(5,5)
z = c(rep(-1,2),rep(1,3))
y+z
z = c(rep(-1,2),rep(1,2))
z = c(rep(-1,2),rep(1,2))
x.y
x&y
xy
c(x,y)
x[0:2]=c(7,6,5)
x[0:3]=c(7,6,5)
sort(x)
order(x)
w = (z>O)
w = (z>0)
v1 = c(1:10)
v2 = v1 +100000000
sd(v1)
sd(v2)
matrix(c(rep(1,3),rep(2,3),rep(3,3)),nrow = 3,ncol = 3,byrow = TRUE)
x[1,]
x[1,:]
x[,1]
x(,1)
x[1,3]
X = matrix(c(rep(1,3),rep(2,3),rep(3,3)),nrow = 3,ncol = 3,byrow = TRUE)
X[1,]
c(X[1,],X[3,])
Y = matrix(rbind(1:9))
Y
Y = matrix(rbind(1:3),rbind(4:6),rbind(7:9))
Y = matrix(rbind(1:4),rbind(4:7),rbind(7:10))
YY
Y
Y = matrix(rbind(1:3),rbind(4:7),rbind(7:10))
Y = matrix(rbind(1:3),rbind(4:6),rbind(7:9))
Y = matrix(rbind(1:3),rbind(3:6),rbind(7:9))
Y
rbind()
help(rbind())
help(rbind)
Y = matrix(cbind(1:9,3))
Y
Y <- cbind(c(1,2,3),c(4,5,6),c(7,8,9))
Y
X*Y
X
X**Y
X%*%Y
t(X)
diag(X)
Z = matrix(rep(1,9),nrow=3)
Z
diag(Z)=0
Z
Z[2,3]=2
Z
Z[0]=2
Z
solve(Z)
Z^(-1)
stat_descriptive(4,9)
res <- stat_descriptive(4,9)
res <- stat_des(4,9)
return (list(moyenne,variance))
stat_des <- function(a,b){
moyenne <- (a+b)/2
variance <- (b-a)**2/12
cat("\n Calcul de la moyenne et de la variance d'une variable uniforme \n")
cat("- - - - - - - -- - -- - - - - -- - - -- - - - -- - - - - - -- - - \n")
cat("Limite de l'intervalle : "+a+","+b+"\n")
cat("Moyenne : "+round(moyenne,2)+"\n")
cat("Variance : "+round(variance,2)+"\n")
return (list(moyenne,variance))
}
res <- stat_des(4,9)
stat_des <- function(a,b){
moyenne <- (a+b)/2
variance <- (b-a)**2/12
cat("\n Calcul de la moyenne et de la variance d'une variable uniforme \n")
cat("- - - - - - - -- - -- - - - - -- - - -- - - - -- - - - - - -- - - \n")
cat("Limite de l'intervalle : ",a,",",b,"\n")
cat("Moyenne : ",round(moyenne,2),"\n")
cat("Variance : ",round(variance,2),"\n")
return (list(moyenne,variance))
}
res <- stat_des(4,9)
library(Lahman)
library(Lahman)
rm(list = list)
x <- c(5,4,6)
,4.37 ,4.07 ,4.11 ,4.03 ,4.00 ,3.97 ,4.01 ,4.09 ,4.06 ,3.92 ,4.19, 3.96, 4.48, 4.24, 4.06, 3.98)
mesures <- c(4.03,4.05,3.96,4.09,4.28,4.04,4.18,4.23,4.14,4.12,4.03,3.94,4.02,4.08,4.13,4.04,3.93,4.08
,4.37 ,4.07 ,4.11 ,4.03 ,4.00 ,3.97 ,4.01 ,4.09 ,4.06 ,3.92 ,4.19, 3.96, 4.48, 4.24, 4.06, 3.98)
mesures
moyenne <- avg(mesures);
moyenne <- mean(mesures);
ecart_type <-std(mesures);
ecart_type <-sd(mesures);
coef_variation <- ecart_type/moyenne;
help(hist());
help(hist());
help(hist);
histogramme <- hist(mesures);
help(hist);
histogramme <- hist(mesures,breaks = 12);
histogramme <- hist(mesures,breaks = 24);
summary(mesures);
summary(mesures);
summary(mesures)-mean();
summary(mesures)-mean;
summary(mesures);
hlep(boxplot)
help(boxplot)
boxplot(mesures);
mesures[4.18]=4.68;
mesures
mesures[4.18]=4.09;
mesures
mesures2 <- mesures;
mesures2[c(7,8,9,10)]=c(4.68,4.73,4.64,4.62);
mesures2
moyenne2 <- mean(mesures2);
moyenne
moyenne2
ecart_type2 <- sd(mesures2);
ecart_type2
ecart_type
boxplot(mesures2)
quantile(mesures,0.3)
X <- c(156, 154, 153, 153, 155, 163, 157, 155, 164, 158, 158, 160);
Y <- c(245, 240, 240, 236, 243, 247, 238, 239, 248, 238, 240, 244);
plot(X,Y);
plot(X,Y,xlab = "Longueur",ylab = "Etendue");
xyplot(X,Y);
moyenneLongueur = mean(X);
moyenneEtendue = mean(Y);
ecartLongueur = sd(X);
ecartEtendue = sd(Y);
moyenneLongueur
moyenneEtendue
Noms <- c("Victor", "Sandrine", "Jonathan", "Marie");
Ages <- c(4,7,6,4);
Tailles <- c(110,122,125,118);
data = data.frame(Noms,Ages,Tailles);
data
install.packages(dplyr)
library(dplyr);
install.packages("dplyr");
install.packages("dplyr");
arrange(data,Noms);
library(dplyr);
arrange(data,Noms);
filter(data,min(Ages));
ageMin = min(Ages);
filter(data,ageMin);
ageMin
filter(data,Ages == 4);
select(data,Noms);
select(data,Noms & arrange(data,Tailles));
select(data,Noms) &  arrange(data,Tailles);
select(data,Noms) &&  arrange(data,Tailles);
data = data.frame(Noms,Ages,Tailles);
data;
select(arrange(data,Tailles),Noms);
library(ggplot2);
str(diamonds)
ggplot(diamonds$x,diamonds$y,diamonds$z)
aes(diamonds$x,diamonds$y,diamonds$z)
diamonds = as.data.frame(diamonds)
diamonds
nrow(diamonds)
ncol(diamonds)
help(diamonds)
help(mutate)
str(diamonds)
help(mutate,diamonds$price/1.23)
prix = mutate(diamonds,diamonds$price/1.23)
prix
prix
install.packages("ggplot2");
library("ggplot2");
library(ggplot2);
as.data.frame(diamonds);
summary(diamonds)
ncol(diamonds)
nrow(diamonds)
help(diamonds)
str(diamonds)
install.packages("dplyr");
library(dplyr);
install.packages("dplyr")
help(mutate)
data = dataUFC[1:62,c(1:76,144)]
dataUFC <- read.csv('data.csv',header = TRUE,sep = ',', dec = '.')
# Permet d'afficher les 2 dimensions du dataset, çad le nombre de combats avec le nombre de variables pour chaque combat.
dim(dataUFC)
# Affiche les 5 permières lignes du dataset
head(dataUFC, n = 5)
# Visualisation des différentes colonnes
colnames(dataUFC)
dataUFC <- read.csv('data.csv',header = TRUE,sep = ',', dec = '.')
setwd("~/Desktop/UCL DATA SCIENCE/LSTAT2110 - analyse de données/Projets/Projet_Analyse_des_donnees_UFC")
dataUFC <- read.csv('data.csv',header = TRUE,sep = ',', dec = '.')
# Permet d'afficher les 2 dimensions du dataset, çad le nombre de combats avec le nombre de variables pour chaque combat.
dim(dataUFC)
# Affiche les 5 permières lignes du dataset
head(dataUFC, n = 5)
# Visualisation des différentes colonnes
colnames(dataUFC)
data = dataUFC[1:62,c(1:76,144)]
dim(data)
colnames(data)
dim(data)
